{"version":3,"sources":["../src/reactServerSentEventContainer.js"],"names":[],"mappings":";;;;;;;;;;;AAEA;;;;;;;;;;+eAFA;;AAIO,IAAM,wEAAgC,SAAhC,6BAAgC,CAAC,cAAD,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,OAApC,EAA6C,QAA7C,EAAmF;AAAA,QAA5B,eAA4B,yDAAV,KAAU;;AAC5H,WAAO,+BAAuB;AAC1B,YAAI,CAAC,cAAL,EAAqB;AACjB,kBAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,YAAM,kCAAgC,eAAe,mBAAf,CAAtC;AACA,YAAM,mBAAmB,IAAI,gBAAJ,EAAzB;;AAN0B,YAQpB,wBARoB;AAAA;;AAStB,8CAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAAA,mHAClB,KADkB,EACX,OADW;AAE3B;;AAXqB;AAAA;AAAA,oDAaF;AAChB,wBAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,6BAAK,WAAL,GAAmB,oBAAoB,SAApB,EAAnB;AACH;AACJ;AAjBqB;AAAA;AAAA,yCAmBb;AACL,2BACI,0DADJ;AAGH;AAvBqB;AAAA;AAAA,8CAyBR,KAzBQ,EAyBD;AACjB,wBAAI,KAAK,WAAT,EAAsB;AAClB;AACH;;AAED,4BAAQ,GAAR,CAAY,KAAZ;AACH;AA/BqB;;AAAA;AAAA;;AAkC1B,iCAAyB,WAAzB,GAAuC,WAAvC;;AAEA,YAAM,cAAc,IAAI,WAAJ,CAAgB,cAAhB,EAAgC,EAAE,gCAAF,EAAhC,CAApB;AACA,oBAAY,MAAZ,GAAqB,YAAM;AACvB,mBAAO,gBAAP,EAAyB,WAAzB;AACH,SAFD;;AAIA,oBAAY,SAAZ,GAAwB,UAAC,KAAD,EAAW;AAC/B,sBAAU,KAAV,EAAiB,gBAAjB,EAAmC,WAAnC;AACH,SAFD;;AAIA,oBAAY,OAAZ,GAAsB,UAAC,KAAD,EAAW;AAC7B,oBAAQ,KAAR,EAAe,gBAAf,EAAiC,WAAjC;AACH,SAFD;;AAIA,eAAO,wBAAP;AACH,KAlDD;AAmDH,CApDM;;AAsDP,IAAM,iBAAiB,SAAjB,cAAiB,YAAa;AAClC,WAAO,UAAU,WAAV,IAAyB,UAAU,IAAnC,IAA2C,WAAlD;AACD,CAFD;;IAIM,gB;AACF,gCAAc;AAAA;;AACV,aAAK,QAAL,GAAgB,EAAhB;AACA,aAAK,KAAL,GAAa,EAAb;AACH;;;;+BAEM,K,EAAO;AACV,iBAAK,KAAL,gBAAiB,KAAK,KAAtB,EAAgC,KAAhC;AACA,iBAAK,IAAL,CAAU,KAAK,KAAf;AACH;;;kCAES,E,EAAI;AACV,iBAAK,QAAL,CAAc,IAAd,CAAmB,EAAnB;AACH;;;oCAEW,E,EAAI;AACZ,iBAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,MAAd,CAAqB,gBAAQ;AACzC,oBAAI,QAAQ,EAAZ,EAAgB;AACZ,2BAAO,IAAP;AACH;AACJ,aAJe,CAAhB;AAKH;;;6BAEI,C,EAAG,O,EAAS;AACb,gBAAM,QAAQ,WAAW,MAAzB;AACA,iBAAK,QAAL,CAAc,OAAd,CAAsB,mBAAW;AAC7B,wBAAQ,IAAR,CAAa,KAAb,EAAoB,CAApB;AACH,aAFD;AAGH","file":"reactServerSentEventContainer.js","sourcesContent":["/*global EventSource */\r\n\r\nimport React, {Component} from 'react';\r\n\r\nexport const reactServerSentEventContainer = (eventSourceUrl, onOpen, onMessage, onError, eventObj, withCredentials = false) => {\r\n    return componentToDecorate => {\r\n        if (!eventSourceUrl) {\r\n            throw new Error('eventSourceUrl is required');\r\n        }\r\n\r\n        const displayName = `ServerSentEvent${getDisplayName(componentToDecorate)}`;\r\n        const eventSourceProps = new EventSourceProps();\r\n\r\n        class ServerSentEventComponent extends Component {\r\n            constructor(props, context) {\r\n                super(props, context);\r\n            }\r\n\r\n            componentDidMount() {\r\n                if (!this.unsubscribe) {\r\n                    this.unsubscribe = eventSourceObserver.subscribe();\r\n                }\r\n            }\r\n\r\n            render() {\r\n                return (\r\n                    <componentToDecorate />\r\n                );\r\n            }\r\n\r\n            _handleChange(props) {\r\n                if (this.unsubscribe) {\r\n                    return;\r\n                }\r\n\r\n                console.log(props);\r\n            }\r\n        }\r\n\r\n        ServerSentEventComponent.displayName = displayName;\r\n        \r\n        const eventSource = new EventSource(eventSourceUrl, { withCredentials });\r\n        eventSource.onopen = () => {\r\n            onOpen(eventSourceProps, eventSource);\r\n        };\r\n\r\n        eventSource.onmessage = (event) => {\r\n            onMessage(event, eventSourceProps, eventSource);\r\n        };\r\n\r\n        eventSource.onerror = (event) => {\r\n            onError(event, eventSourceProps, eventSource);\r\n        };\r\n\r\n        return ServerSentEventComponent;\r\n    };\r\n};\r\n\r\nconst getDisplayName = component => {\r\n  return component.displayName || component.name || 'Component'\r\n};\r\n\r\nclass EventSourceProps {\r\n    constructor() {\r\n        this.handlers = [];\r\n        this.props = {};\r\n    }\r\n\r\n    update(props) {\r\n        this.props = {...this.props, ...props};\r\n        this.fire(this.props);\r\n    }\r\n\r\n    subscribe(fn) {\r\n        this.handlers.push(fn);\r\n    }\r\n\r\n    unsubscribe(fn) {\r\n        this.handlers = this.handlers.filter(item => {\r\n            if (item != fn) {\r\n                return item;\r\n            }\r\n        });\r\n    }\r\n\r\n    fire(o, thisObj) {\r\n        const scope = thisObj || window;\r\n        this.handlers.forEach(handler => {\r\n            handler.call(scope, o);\r\n        });\r\n    }\r\n}"]}